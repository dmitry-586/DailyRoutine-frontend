'use client'

import { TelegramUser } from '@/types/auth/auth.type'
import { Loader2 } from 'lucide-react'
import Image from 'next/image'
import { useCallback, useEffect, useRef, useState } from 'react'
import Button from '../ui/Button'
import Modal from '../ui/Modal'

interface TelegramAuthModalProps {
	isOpen: boolean
	onClose: () => void
	onAuthSuccess?: (user: TelegramUser) => void
}

export default function TelegramAuthModal({
	isOpen,
	onClose,
	onAuthSuccess,
}: TelegramAuthModalProps) {
	const telegramContainerRef = useRef<HTMLDivElement>(null)
	const [isLoading, setIsLoading] = useState(false)

	// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Telegram
	const onTelegramAuth = useCallback(
		(user: TelegramUser) => {
			console.log('üöÄ Telegram –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!')
			console.log('üë§ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', user)
			console.log('üìù –î–µ—Ç–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:')
			console.log(`   ID: ${user.id}`)
			console.log(`   –ò–º—è: ${user.first_name}`)
			console.log(`   –§–∞–º–∏–ª–∏—è: ${user.last_name || '–Ω–µ —É–∫–∞–∑–∞–Ω–∞'}`)
			console.log(
				`   Username: ${user.username ? '@' + user.username : '–Ω–µ —É–∫–∞–∑–∞–Ω'}`
			)
			console.log(`   –§–æ—Ç–æ: ${user.photo_url || '–Ω–µ —É–∫–∞–∑–∞–Ω–æ'}`)
			console.log(
				`   –î–∞—Ç–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${new Date(
					user.auth_date * 1000
				).toLocaleString()}`
			)
			console.log(`   Hash: ${user.hash}`)

			// –í—ã–∑—ã–≤–∞–µ–º callback
			onAuthSuccess?.(user)

			// –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
			onClose()
		},
		[onAuthSuccess, onClose]
	)

	// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç Telegram –≤–∏–¥–∂–µ—Ç–∞
	useEffect(() => {
		if (!isOpen) return

		setIsLoading(true)
		console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è Telegram –≤–∏–¥–∂–µ—Ç...')
		;(
			window as Window & { onTelegramAuth?: typeof onTelegramAuth }
		).onTelegramAuth = onTelegramAuth

		// –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–∫—Ä–∏–ø—Ç Telegram –≤–∏–¥–∂–µ—Ç–∞
		const script = document.createElement('script')
		script.src = 'https://telegram.org/js/telegram-widget.js?22'
		script.async = true
		script.setAttribute('data-telegram-login', 'Da1lyRoutine_bot')
		script.setAttribute('data-size', 'large')
		script.setAttribute('data-onauth', 'onTelegramAuth(user)')
		script.setAttribute('data-request-access', 'write')

		// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π —Å–∫—Ä–∏–ø—Ç–∞
		script.onload = () => {
			console.log('‚úÖ Telegram –≤–∏–¥–∂–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ')
			setIsLoading(false)
		}
		script.onerror = () => {
			console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Telegram –≤–∏–¥–∂–µ—Ç–∞')
			setIsLoading(false)
		}

		// –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
		const container = telegramContainerRef.current

		// –î–æ–±–∞–≤–ª—è–µ–º —Å–∫—Ä–∏–ø—Ç –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —á–µ—Ä–µ–∑ ref
		if (container) {
			container.appendChild(script)
			console.log('üîó Telegram –≤–∏–¥–∂–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ DOM')
		}

		// –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ —Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
		return () => {
			if (container && container.contains(script)) {
				container.removeChild(script)
			}
			delete (window as Window & { onTelegramAuth?: typeof onTelegramAuth })
				.onTelegramAuth
			setIsLoading(false)
		}
	}, [isOpen, onClose, onAuthSuccess, onTelegramAuth])

	return (
		<Modal
			isOpen={isOpen}
			onClose={onClose}
			title='–í—Ö–æ–¥ —á–µ—Ä–µ–∑ Telegram'
			className='max-w-lg'
		>
			<div className='w-16 h-16 bg-primary/20 rounded-full flex items-center justify-center mx-auto'>
				<Image
					src='/telegram.svg'
					alt='Telegram'
					width={40}
					height={40}
					className='text-primary'
				/>
			</div>

			<p className='text-foreground/80 mt-3 mb-6 text-center'>
				–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –≤–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Telegram. –≠—Ç–æ –±—ã—Å—Ç—Ä—ã–π
				–∏&nbsp;–±–µ–∑–æ–ø–∞—Å–Ω—ã–π —Å–ø–æ—Å–æ–± –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏.
			</p>

			<div className='mb-6'>
				{isLoading ? (
					<div className='flex items-center justify-center py-8'>
						<Loader2 className='animate-spin h-8 w-8 text-primary' />
						<span className='ml-3 text-foreground/60'>–ó–∞–≥—Ä—É–∑–∫–∞...</span>
					</div>
				) : (
					<div
						ref={telegramContainerRef}
						className='min-h-[40px] bg-transparent flex items-center justify-center'
					/>
				)}
			</div>

			<Button variant='primary' onClick={onClose} className='w-full'>
				–û—Ç–º–µ–Ω–∞
			</Button>
		</Modal>
	)
}
